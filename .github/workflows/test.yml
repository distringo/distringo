name: Check and Test

on:
  push:
  schedule:
    - cron: 0 0 * * *

jobs:
  check-client:
    name: Check the code (client)
    runs-on: ubuntu-20.04
    strategy:
      fail-fast: false
      matrix:
        node: [18]
    steps:
      - uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node }}
      - uses: actions/checkout@v1
      - name: Install dependencies
        working-directory: client
        run: npm ci
      - name: Check client code formatting
        working-directory: client
        run: npx pretty-quick --check
      - name: Run eslint
        working-directory: client
        run: npx eslint .

  check-rust:
    name: Check the code
    runs-on: ubuntu-20.04
    strategy:
      fail-fast: false
      matrix:
        rust: [stable, beta]
    steps:
      - name: Install the appropriate Rust toolchain
        run: |
          rustup toolchain install ${{ matrix.rust }} --component rustfmt clippy
          rustup default ${{ matrix.rust }}
      - uses: actions/checkout@v1
      - name: Run rustfmt
        run: |
          cargo fmt --all -- --check
      - name: Run clippy
        run: |
          cargo clippy --workspace --all-features --all-targets

  test-client:
    name: Test the code (client)
    runs-on: ubuntu-20.04
    strategy:
      fail-fast: false
      matrix:
        node: [18]
    steps:
      - uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node }}
      - uses: actions/checkout@v1
      - name: Install dependencies
        working-directory: client
        run: npm ci
      - name: Run tests
        working-directory: client
        run: npm run test -- --coverage
      - name: Upload coverage
        uses: codecov/codecov-action@v3.1.1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          verbose: true

  test-rust:
    name: Test the code
    runs-on: ubuntu-20.04
    strategy:
      fail-fast: false
      matrix:
        rust: [stable, beta, nightly]
    steps:
      - name: Install the appropriate Rust toolchain
        run: |
          rustup toolchain install ${{ matrix.rust }}
          rustup default ${{ matrix.rust }}
      - uses: actions/checkout@v1
      - name: Run cargo test
        run: |
          cargo test --workspace --all-features --all-targets --no-fail-fast

  coverage-rust:
    name: Measure test coverage
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        rust: [stable]
    steps:
      - name: Install the appropriate Rust toolchain
        run: |
          rustup toolchain install ${{ matrix.rust }} --component llvm-tools-preview
          rustup default ${{ matrix.rust }}
      - name: Install cargo-llvm-cov
        run: cargo install cargo-llvm-cov --version=0.4.14
      - uses: actions/checkout@v1
      - name: Run cargo-llvm-cov
        run: >
          cargo llvm-cov
          --all-features
          --all-targets
          --workspace
          --lcov
          --output-path lcov.info
      - name: Upload coverage
        uses: codecov/codecov-action@v3.1.1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          verbose: true
      - uses: actions/upload-artifact@v1
        with:
          name: lcov.info
          path: ./lcov.info
